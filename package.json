{
  "name": "quiz-generator",
  "version": "1.0.0",
  "description": "AI-powered PDF quiz generator",
  "private": true,
  "workspaces": [
    "apps/frontend",
    "apps/backend"
  ],
  "scripts": {
    "dev": "bun run clean && bun run dev:backend & bun run dev:frontend",
    "dev:frontend": "cd apps/frontend && NODE_OPTIONS=\"\" bun run dev",
    "dev:backend": "cd apps/backend && source venv/bin/activate && bun run dev",
    "build": "bun run build:frontend && bun run build:backend",
    "build:frontend": "cd apps/frontend && NODE_OPTIONS=\"\" bun run build",
    "build:backend": "cd apps/backend && echo 'Backend build complete'",
    "start": "bun run start:frontend",
    "start:frontend": "cd apps/frontend && bun run start",
    "start:backend": "cd apps/backend && source venv/bin/activate && bun run start",
    "test": "bun run test:setup && bun run test:build",
    "test:setup": "bun run check:env && bun run check:venv && bun run check:deps",
    "test:build": "bun run build:frontend",
    "check:env": "test -f .env || (echo '❌ .env file not found' && exit 1)",
    "check:venv": "test -d apps/backend/venv || (echo '❌ Python venv not found. Run: python3 -m venv apps/backend/venv && source apps/backend/venv/bin/activate && pip install -r apps/backend/requirements.txt' && exit 1)",
    "check:deps": "cd apps/backend && source venv/bin/activate && python -c 'import fastapi, openai, PyPDF2' || (echo '❌ Backend dependencies missing. Run: pip install -r apps/backend/requirements.txt' && exit 1)",
    "clean": "bun run clean:ports",
    "clean:ports": "lsof -ti:3000 | xargs kill -9 2>/dev/null || true && lsof -ti:8000 | xargs kill -9 2>/dev/null || true",
    "lint": "bun run lint:frontend && bun run lint:backend",
    "lint:frontend": "cd apps/frontend && bun run lint",
    "lint:backend": "cd apps/backend && source venv/bin/activate && bun run lint",
    "format": "bun run format:frontend && bun run format:backend",
    "format:frontend": "cd apps/frontend && bun run lint --fix",
    "format:backend": "cd apps/backend && source venv/bin/activate && bun run format",
    "type-check": "bun run type-check:frontend && bun run type-check:backend",
    "type-check:frontend": "cd apps/frontend && bunx tsc --noEmit",
    "type-check:backend": "cd apps/backend && source venv/bin/activate && bun run type-check"
  },
  "devDependencies": {
    "@types/node": "^20.0.0"
  }
}